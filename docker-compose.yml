services:

  zookeeper:
    image: bitnami/zookeeper:3.9.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.9.0
    container_name: kafka
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

  fluent-bit:
    image: fluent/fluent-bit
    container_name: fluent-bit
    depends_on:
      - kafka
    env_file:
      - .env
    volumes:
      - ${NGINX_LOG_DIR}:/var/log
      - ./conf:/fluent-bit/etc
    command: ["/fluent-bit/bin/fluent-bit", '-c', '/fluent-bit/etc/fluent-bit.conf']

  postgres:
    image: postgres:17.2
    container_name: postgres17
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA}
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    volumes:
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgres-data:/var/lib/postgresql/data

  cloudbeaver:
    container_name: cloudbeaver
    image: dbeaver/cloudbeaver:latest
    ports:
      - "8978:8978"

  ipanalytics:
    container_name: ip_analytics
    build: .
    image: ip-analytics
    depends_on:
      - kafka
      - postgres
    volumes:
      - .:/app
    command: "gunicorn --workers 2 --bind 0.0.0.0:3000 main:app -k gevent"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    ports:
      - "3000:3000"
    
  ipdashboard:
    container_name: ip_analytics_dash
    build:
      context: ./dashboard/ip-dashboard
      dockerfile: Dockerfile
    image: ip-analytics-dash
    depends_on:
      - ipanalytics

  nginx:
    image: nginx:alpine
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8082:80"

volumes:
  postgres-data:
